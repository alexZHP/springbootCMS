package com.ritu.cms.base.dao.impl;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.mybatis.spring.SqlSessionTemplate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.ritu.cms.base.dao.BaseDao;
import com.ritu.cms.base.util.GenericsUtils;
import com.ritu.cms.base.where.SqlUtil;
import com.ritu.cms.base.where.Where;
import com.ritu.cms.index.annotation.TableName;

/**
 * 
 * 类名：BaseDaoImpl.java<br>
 * 包名：com.ritu.search.api.base.dao.impl<br>
 * 描述：基础的dao接口实现<br>
 * 创建时间：2018年9月10日 上午11:15:54<br>
 * @author 阮建钧<br>
 * @version <br>
 */
public class BaseDaoImpl<T> implements BaseDao<T> {

	protected Logger logger = LoggerFactory.getLogger(this.getClass());

	@Resource
	private SqlSessionTemplate sqlSessionTemplate;

	private Class<T> entityClass; // 当前泛型实际类

	private String tableName; // 当前泛型对应的表名
	
	@SuppressWarnings("unchecked")
	public BaseDaoImpl() {
		super();
		this.entityClass = (Class<T>) GenericsUtils.getSuperClassGenricType(this.getClass());
		if (entityClass.isAnnotationPresent(TableName.class)) {
			TableName table = (TableName) entityClass.getAnnotation(TableName.class);
			tableName = table.value();
		}
	}

	@Override
	public long count(Where where) {
		StringBuffer sql = new StringBuffer(" select count(*) from ").append(tableName).append(where.getPrams());
		logger.warn(sql.toString());
		return sqlSessionTemplate.selectOne("selectCountByParm", sql.toString());
	}
	
	@Override
	public T get(Where where) {
		StringBuffer sql = new StringBuffer(" select ").append(SqlUtil.getTableFields(entityClass));
		sql.append(" from ").append(tableName).append(where.getPrams());
		logger.warn(sql.toString());
		Map<String, Object> map = sqlSessionTemplate.selectOne("getByParm", sql.toString());
		return SqlUtil.setEntityFileValue(map, entityClass);
	}

	@Override
	public List<T> list(Where where) {
		StringBuffer sql = new StringBuffer(" select ").append(SqlUtil.getTableFields(entityClass));
		sql.append(" from ").append(tableName).append(where.getPrams());
		logger.warn(sql.toString());
		List<Map<String, Object>> selectList = sqlSessionTemplate.selectList("selectListByParm", sql.toString());
		return SqlUtil.setListFileValue(selectList, entityClass);
	}

}
